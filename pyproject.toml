[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.djlint]
ignore = "H030,H031"
profile = "jinja"

[tool.flake8]
docstring-convention = "google"
exclude = """
./.*,
__pycache__,
*.pyc,
*.egg-info,
"""
extend-ignore = """
D100, D104, D105  # Don't make package, module and magic method docstrings compulsory

# Ignore most comma warnings, keeping only "trailing comma on bare tuple prohibited"
C812, C813, C814, C815, C816, C819

W503,  # Compatiblity with black: line break before binary operator
"""
format = "${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s"
max-line-length = 88  # Same as black
strictness = "short"  # Allow one-line docstrings without full details

[tool.isort]
balanced_wrapping = false
default_section = "THIRDPARTY"
force_grid_wrap = 0
include_trailing_comma = true
indent = "    "
line_length = 88
multi_line_output = 3
skip_glob = ["**/.**"]
use_parentheses = true

[tool.poe.env]
LINT_DIRS = "doxhell scripts tests"
TEMPLATES_DIR = "doxhell/templates"

[tool.poe.tasks._autoflake]
cmd = """
autoflake --remove-all-unused-imports --remove-unused-variables --recursive --in-place
$LINT_DIRS
"""
help = "Remove unused imports and variables"

[tool.poe.tasks._black]
cmd = "black $LINT_DIRS"
help = "Run black to auto-format files"

[tool.poe.tasks._black-check]
cmd = "black --check --diff --color $LINT_DIRS"
help = "Run black to check format"

[tool.poe.tasks._format-css]
cmd = "python scripts/format_css.py $TEMPLATES_DIR"
help = "Auto-format CSS files"

[tool.poe.tasks._format-css-check]
cmd = "python scripts/format_css.py --check $TEMPLATES_DIR"
help = "Check format of CSS files"

[tool.poe.tasks._format-templates]
cmd = "djlint $TEMPLATES_DIR --reformat --extension .jinja2"
help = "Auto-format Jinja2 templates"

[tool.poe.tasks._format-templates-check]
cmd = "djlint $TEMPLATES_DIR --check --extension .jinja2"
help = "Check format of Jinja2 templates"

[tool.poe.tasks._isort]
cmd = "isort $LINT_DIRS"
help = "Auto-sort imports"

[tool.poe.tasks._isort-check]
cmd = "isort --check-only --diff $LINT_DIRS"
help = "Check import sorting"

[tool.poe.tasks._success_message]
cmd = "python scripts/success_message.py"
help = "Print a success message at the end of a run"

[tool.poe.tasks._toml-sort]
cmd = "toml-sort --in-place pyproject.toml"
help = "Check pyproject.toml sorting"

[tool.poe.tasks._toml-sort-check]
cmd = "toml-sort --check pyproject.toml"
help = "Check pyproject.toml sorting"

[tool.poe.tasks.auto-format]
sequence = ["_autoflake", "_black", "_isort", "_toml-sort", "_format-css", "_format-templates"]
help = "Auto-format code (careful!)"

[tool.poe.tasks.check-format]
sequence = ["_black-check", "_isort-check", "_toml-sort-check", "_format-css-check", "_format-templates-check"]
help = "Check code formatting"

[tool.poe.tasks.lint]
sequence = ["lint-python", "lint-templates"]
help = "Lint all code"

[tool.poe.tasks.lint-python]
cmd = "pflake8 $LINT_DIRS"
help = "Lint Python code"

[tool.poe.tasks.lint-templates]
cmd = "djlint $TEMPLATES_DIR --lint --extension .jinja2"
help = "Lint Jinja2 templates"

[tool.poe.tasks.mypy]
cmd = "mypy $LINT_DIRS"
help = "Run type checking using mypy"

[tool.poe.tasks.pre-commit]
sequence = ["check-format", "lint", "mypy", "test", "_success_message"]
help = "Run format check, linter, type checker and tests"

[tool.poe.tasks.run]
cmd = "python -m doxhell"
help = "Run the tool"

[tool.poe.tasks.test]
cmd = "pytest tests"
help = "Run all tests"

[tool.poetry]
name = "doxhell"
version = "0.1.0"
description = "Automate software V&V documentation work."
authors = ["Siim Lepik <siim.lepik@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
loguru = "^0.6.0"
PyYAML = "^6.0"
rich = "^12.4.4"
click = "^8.1.3"
Jinja2 = "^3.1.2"
pdfkit = "^1.0.0"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
black = "^22.6.0"
isort = "^5.10.1"
mypy = "^0.961"
types-PyYAML = "^6.0.9"
flake8 = "^4.0.1"
autoflake = "^1.4"
flake8-bugbear = "^22.7.1"
flake8-commas = "^2.1.0"
flake8-comprehensions = "^3.10.0"
flake8-docstrings = "^1.6.0"
flake8-printf-formatting = "^1.1.2"
flake8-pytest-style = "^1.6.0"
flake8-colors = "^0.1.9"
pyproject-flake8 = "^0.0.1-alpha.4"
toml-sort = "^0.20.0"
cssbeautifier = "^1.14.4"
djlint = "^1.7.0"

[tool.poetry.scripts]
doxhell = "doxhell.__main__:_main"
